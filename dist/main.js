(()=>{"use strict";function o(e,t,n,l,s){if(t[0]===e[0]&&t[1]===e[1])return void console.log("ur here already");const r=7*e[0]+e[0]+e[1];console.log(r);for(let o=0;o<n[r].head.length;o++)l.push(n[r].head[o]);o(l.shift(),t,n,l,s)}!function(){let e=[];const t=[0,2],n=[];n.push(t),e=function(o){const e=[void 0];for(let t=0;t<=7;t++)for(let n=0;n<=7;n++){e[7*t+t+n]={head:[]};for(let l=0;l<=7;l++)t+o[l][0]>=0&&t+o[l][0]<=7&&n+o[l][1]>=0&&n+o[l][1]<=7&&e[7*t+t+n].head.push([[t+o[l][0]],[n+o[l][1]]])}return e}([[2,1],[2,-1],[-2,1],[-2,-1],[1,2],[1,-2],[-1,2],[-1,-2]]),console.log(e),n.push(t),o(t,[5,6],e,[],n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBNEJBLFNBQVNBLEVBQWFDLEVBQU9DLEVBQUtDLEVBQU9DLEVBQU9DLEdBQzlDLEdBQUlILEVBQUksS0FBT0QsRUFBTSxJQUFNQyxFQUFJLEtBQU9ELEVBQU0sR0FFMUMsWUFEQUssUUFBUUMsSUFBSSxtQkFJZCxNQUFNQyxFQUFlLEVBQVhQLEVBQU0sR0FBU0EsRUFBTSxHQUFLQSxFQUFNLEdBQzFDSyxRQUFRQyxJQUFJQyxHQUNaLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJTixFQUFNSyxHQUFHRSxLQUFLQyxPQUFRRixJQUN4Q0wsRUFBTVEsS0FBS1QsRUFBTUssR0FBR0UsS0FBS0QsSUFHM0JULEVBQWFJLEVBQU1TLFFBQVNYLEVBQUtDLEVBQU9DLEVBQU9DLEVBQ2pELEVBRUEsV0FDRSxJQUFJRixFQUFRLEdBQ1osTUFXTUYsRUFBUSxDQUFDLEVBQUcsR0FHWkksRUFBTSxHQUdaQSxFQUFJTyxLQUFLWCxHQUVURSxFQTVERixTQUF1QlcsR0FDckIsTUFBTVgsRUFBUSxNQUFDWSxHQUVmLElBQUssSUFBSVAsRUFBSSxFQUFHQSxHQUFLLEVBQUdBLElBQ3RCLElBQUssSUFBSUMsRUFBSSxFQUFHQSxHQUFLLEVBQUdBLElBQUssQ0FDM0JOLEVBQVUsRUFBSkssRUFBUUEsRUFBSUMsR0NQZixDQUFFQyxLQURJLElEU1QsSUFBSyxJQUFJTSxFQUFJLEVBQUdBLEdBQUssRUFBR0EsSUFFcEJSLEVBQUlNLEVBQWNFLEdBQUcsSUFBTSxHQUMzQlIsRUFBSU0sRUFBY0UsR0FBRyxJQUFNLEdBQzNCUCxFQUFJSyxFQUFjRSxHQUFHLElBQU0sR0FDM0JQLEVBQUlLLEVBQWNFLEdBQUcsSUFBTSxHQUUzQmIsRUFBVSxFQUFKSyxFQUFRQSxFQUFJQyxHQUFHQyxLQUFLRSxLQUFLLENBQzdCLENBQUNKLEVBQUlNLEVBQWNFLEdBQUcsSUFDdEIsQ0FBQ1AsRUFBSUssRUFBY0UsR0FBRyxLQUk5QixDQUVGLE9BQU9iLENBQ1QsQ0FzQ1VjLENBbkJjLENBQ3BCLENBQUMsRUFBRyxHQUNKLENBQUMsR0FBSSxHQUNMLEVBQUUsRUFBRyxHQUNMLEVBQUUsR0FBSSxHQUNOLENBQUMsRUFBRyxHQUNKLENBQUMsR0FBSSxHQUNMLEVBQUUsRUFBRyxHQUNMLEVBQUUsR0FBSSxLQVlSWCxRQUFRQyxJQUFJSixHQUVaRSxFQUFJTyxLQUFLWCxHQUVURCxFQUFhQyxFQVpELENBQUMsRUFBRyxHQVlTRSxFQVRYLEdBU3lCRSxFQUN6QyxDQUVBYSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZGV2LXRlbXBsYXRlLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3dlYmRldi10ZW1wbGF0ZS8uL3NyYy9ub2RlL25vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tcGx1c3BsdXMgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvZXh0ZW5zaW9ucywgaW1wb3J0L25vLW5hbWVkLWFzLWRlZmF1bHQsIGltcG9ydC9uby1uYW1lZC1hcy1kZWZhdWx0LW1lbWJlclxuaW1wb3J0IG5vZGUgZnJvbSBcIi4vbm9kZS9ub2RlLmpzXCI7XG5cbmZ1bmN0aW9uIGdyYXBoQ3JlYXRpb24ocG9zc2libGVNb3Zlcykge1xuICBjb25zdCBncmFwaCA9IFt1bmRlZmluZWRdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDw9IDc7IGkrKykge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDw9IDc7IGorKykge1xuICAgICAgZ3JhcGhbaSAqIDcgKyBpICsgal0gPSBub2RlKCk7XG4gICAgICBmb3IgKGxldCBrID0gMDsgayA8PSA3OyBrKyspIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGkgKyBwb3NzaWJsZU1vdmVzW2tdWzBdID49IDAgJiZcbiAgICAgICAgICBpICsgcG9zc2libGVNb3Zlc1trXVswXSA8PSA3ICYmXG4gICAgICAgICAgaiArIHBvc3NpYmxlTW92ZXNba11bMV0gPj0gMCAmJlxuICAgICAgICAgIGogKyBwb3NzaWJsZU1vdmVzW2tdWzFdIDw9IDdcbiAgICAgICAgKSB7XG4gICAgICAgICAgZ3JhcGhbaSAqIDcgKyBpICsgal0uaGVhZC5wdXNoKFtcbiAgICAgICAgICAgIFtpICsgcG9zc2libGVNb3Zlc1trXVswXV0sXG4gICAgICAgICAgICBbaiArIHBvc3NpYmxlTW92ZXNba11bMV1dLFxuICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBncmFwaDtcbn1cblxuZnVuY3Rpb24gc2VhcmNoUmVzdWx0KHN0YXJ0LCBlbmQsIGdyYXBoLCBxdWV1ZSwgcmVzKSB7XG4gIGlmIChlbmRbMF0gPT09IHN0YXJ0WzBdICYmIGVuZFsxXSA9PT0gc3RhcnRbMV0pIHtcbiAgICBjb25zb2xlLmxvZyhcInVyIGhlcmUgYWxyZWFkeVwiKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBpID0gc3RhcnRbMF0gKiA3ICsgc3RhcnRbMF0gKyBzdGFydFsxXTtcbiAgY29uc29sZS5sb2coaSk7XG4gIGZvciAobGV0IGogPSAwOyBqIDwgZ3JhcGhbaV0uaGVhZC5sZW5ndGg7IGorKykge1xuICAgIHF1ZXVlLnB1c2goZ3JhcGhbaV0uaGVhZFtqXSk7XG4gIH1cblxuICBzZWFyY2hSZXN1bHQocXVldWUuc2hpZnQoKSwgZW5kLCBncmFwaCwgcXVldWUsIHJlcyk7XG59XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gIGxldCBncmFwaCA9IFtdO1xuICBjb25zdCBwb3NzaWJsZU1vdmVzID0gW1xuICAgIFsyLCAxXSxcbiAgICBbMiwgLTFdLFxuICAgIFstMiwgMV0sXG4gICAgWy0yLCAtMV0sXG4gICAgWzEsIDJdLFxuICAgIFsxLCAtMl0sXG4gICAgWy0xLCAyXSxcbiAgICBbLTEsIC0yXSxcbiAgXTtcblxuICBjb25zdCBzdGFydCA9IFswLCAyXTtcbiAgY29uc3QgZW5kID0gWzUsIDZdO1xuXG4gIGNvbnN0IHJlcyA9IFtdO1xuICBjb25zdCBxdWV1ZSA9IFtdO1xuXG4gIHJlcy5wdXNoKHN0YXJ0KTtcblxuICBncmFwaCA9IGdyYXBoQ3JlYXRpb24ocG9zc2libGVNb3Zlcyk7XG4gIGNvbnNvbGUubG9nKGdyYXBoKTtcblxuICByZXMucHVzaChzdGFydCk7XG5cbiAgc2VhcmNoUmVzdWx0KHN0YXJ0LCBlbmQsIGdyYXBoLCBxdWV1ZSwgcmVzKTtcbn1cblxubWFpbigpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9kZSgpIHtcbiAgY29uc3QgaGVhZCA9IFtdO1xuICByZXR1cm4geyBoZWFkIH07XG59XG4iXSwibmFtZXMiOlsic2VhcmNoUmVzdWx0Iiwic3RhcnQiLCJlbmQiLCJncmFwaCIsInF1ZXVlIiwicmVzIiwiY29uc29sZSIsImxvZyIsImkiLCJqIiwiaGVhZCIsImxlbmd0aCIsInB1c2giLCJzaGlmdCIsInBvc3NpYmxlTW92ZXMiLCJ1bmRlZmluZWQiLCJrIiwiZ3JhcGhDcmVhdGlvbiIsIm1haW4iXSwic291cmNlUm9vdCI6IiJ9