(()=>{"use strict";!function(){let o=[];const e=[0,2];[].push(e),o=function(o){const e=[void 0];for(let t=0;t<=7;t++)for(let n=0;n<=7;n++){e[7*t+t+n]={head:[]};for(let l=0;l<=7;l++)t+o[l][0]>=0&&t+o[l][0]<=7&&n+o[l][1]>=0&&n+o[l][1]<=7&&e[7*t+t+n].head.push([[t+o[l][0]],[n+o[l][1]]])}return e}([[2,1],[2,-1],[-2,1],[-2,-1],[1,2],[1,-2],[-1,2],[-1,-2]]),console.log(o),console.log(function(o,e,t){const n=[];let l=7*o[0]+o[0]+o[1],s=0,c=0;for(;o[0]!==e[0]&&o[1]!==e[1];){for(l=7*o[0]+o[0]+o[1];s<t[l].head.length;)n.push([t[l].head[s][0],t[l].head[s][1]]),s++;o=[n[c]],c++,s=0}console.log(n)}(e,[5,6],o))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoib0JBa0RBLFdBQ0UsSUFBSUEsRUFBUSxHQUNaLE1BV01DLEVBQVEsQ0FBQyxFQUFHLEdBR04sR0FHUkMsS0FBS0QsR0FFVEQsRUFuRUYsU0FBdUJHLEdBQ3JCLE1BQU1ILEVBQVEsTUFBQ0ksR0FFZixJQUFLLElBQUlDLEVBQUksRUFBR0EsR0FBSyxFQUFHQSxJQUN0QixJQUFLLElBQUlDLEVBQUksRUFBR0EsR0FBSyxFQUFHQSxJQUFLLENBQzNCTixFQUFVLEVBQUpLLEVBQVFBLEVBQUlDLEdDUGYsQ0FBRUMsS0FESSxJRFNULElBQUssSUFBSUMsRUFBSSxFQUFHQSxHQUFLLEVBQUdBLElBRXBCSCxFQUFJRixFQUFjSyxHQUFHLElBQU0sR0FDM0JILEVBQUlGLEVBQWNLLEdBQUcsSUFBTSxHQUMzQkYsRUFBSUgsRUFBY0ssR0FBRyxJQUFNLEdBQzNCRixFQUFJSCxFQUFjSyxHQUFHLElBQU0sR0FFM0JSLEVBQVUsRUFBSkssRUFBUUEsRUFBSUMsR0FBR0MsS0FBS0wsS0FBSyxDQUM3QixDQUFDRyxFQUFJRixFQUFjSyxHQUFHLElBQ3RCLENBQUNGLEVBQUlILEVBQWNLLEdBQUcsS0FJOUIsQ0FFRixPQUFPUixDQUNULENBNkNVUyxDQW5CYyxDQUNwQixDQUFDLEVBQUcsR0FDSixDQUFDLEdBQUksR0FDTCxFQUFFLEVBQUcsR0FDTCxFQUFFLEdBQUksR0FDTixDQUFDLEVBQUcsR0FDSixDQUFDLEdBQUksR0FDTCxFQUFFLEVBQUcsR0FDTCxFQUFFLEdBQUksS0FZUkMsUUFBUUMsSUFBSVgsR0FDWlUsUUFBUUMsSUE3Q1YsU0FBc0JWLEVBQU9XLEVBQUtaLEdBQ2hDLE1BQU1hLEVBQVEsR0FDZCxJQUFJUixFQUFlLEVBQVhKLEVBQU0sR0FBU0EsRUFBTSxHQUFLQSxFQUFNLEdBQ3BDSyxFQUFJLEVBQ0pRLEVBQUksRUFFUixLQUFPYixFQUFNLEtBQU9XLEVBQUksSUFBTVgsRUFBTSxLQUFPVyxFQUFJLElBQUksQ0FFakQsSUFEQVAsRUFBZSxFQUFYSixFQUFNLEdBQVNBLEVBQU0sR0FBS0EsRUFBTSxHQUM3QkssRUFBSU4sRUFBTUssR0FBR0UsS0FBS1EsUUFDdkJGLEVBQU1YLEtBQUssQ0FBQ0YsRUFBTUssR0FBR0UsS0FBS0QsR0FBRyxHQUFJTixFQUFNSyxHQUFHRSxLQUFLRCxHQUFHLEtBQ2xEQSxJQUlGTCxFQUFRLENBQUNZLEVBQU1DLElBQ2ZBLElBQ0FSLEVBQUksQ0FDTixDQUVBSSxRQUFRQyxJQUFJRSxFQUNkLENBeUJjRyxDQUFhZixFQVRiLENBQUMsRUFBRyxHQVNxQkQsR0FDdkMsQ0FFQWlCLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJkZXYtdGVtcGxhdGUvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2ViZGV2LXRlbXBsYXRlLy4vc3JjL25vZGUvbm9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1wbHVzcGx1cyAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9leHRlbnNpb25zLCBpbXBvcnQvbm8tbmFtZWQtYXMtZGVmYXVsdCwgaW1wb3J0L25vLW5hbWVkLWFzLWRlZmF1bHQtbWVtYmVyXG5pbXBvcnQgbm9kZSBmcm9tIFwiLi9ub2RlL25vZGUuanNcIjtcblxuZnVuY3Rpb24gZ3JhcGhDcmVhdGlvbihwb3NzaWJsZU1vdmVzKSB7XG4gIGNvbnN0IGdyYXBoID0gW3VuZGVmaW5lZF07XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPD0gNzsgaSsrKSB7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPD0gNzsgaisrKSB7XG4gICAgICBncmFwaFtpICogNyArIGkgKyBqXSA9IG5vZGUoKTtcbiAgICAgIGZvciAobGV0IGsgPSAwOyBrIDw9IDc7IGsrKykge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgaSArIHBvc3NpYmxlTW92ZXNba11bMF0gPj0gMCAmJlxuICAgICAgICAgIGkgKyBwb3NzaWJsZU1vdmVzW2tdWzBdIDw9IDcgJiZcbiAgICAgICAgICBqICsgcG9zc2libGVNb3Zlc1trXVsxXSA+PSAwICYmXG4gICAgICAgICAgaiArIHBvc3NpYmxlTW92ZXNba11bMV0gPD0gN1xuICAgICAgICApIHtcbiAgICAgICAgICBncmFwaFtpICogNyArIGkgKyBqXS5oZWFkLnB1c2goW1xuICAgICAgICAgICAgW2kgKyBwb3NzaWJsZU1vdmVzW2tdWzBdXSxcbiAgICAgICAgICAgIFtqICsgcG9zc2libGVNb3Zlc1trXVsxXV0sXG4gICAgICAgICAgXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGdyYXBoO1xufVxuXG5mdW5jdGlvbiBzZWFyY2hSZXN1bHQoc3RhcnQsIGVuZCwgZ3JhcGgpIHtcbiAgY29uc3QgcXVldWUgPSBbXTtcbiAgbGV0IGkgPSBzdGFydFswXSAqIDcgKyBzdGFydFswXSArIHN0YXJ0WzFdO1xuICBsZXQgaiA9IDA7XG4gIGxldCB3ID0gMDtcblxuICB3aGlsZSAoc3RhcnRbMF0gIT09IGVuZFswXSAmJiBzdGFydFsxXSAhPT0gZW5kWzFdKSB7XG4gICAgaSA9IHN0YXJ0WzBdICogNyArIHN0YXJ0WzBdICsgc3RhcnRbMV07XG4gICAgd2hpbGUgKGogPCBncmFwaFtpXS5oZWFkLmxlbmd0aCkge1xuICAgICAgcXVldWUucHVzaChbZ3JhcGhbaV0uaGVhZFtqXVswXSwgZ3JhcGhbaV0uaGVhZFtqXVsxXV0pO1xuICAgICAgaisrO1xuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHN0YXJ0ID0gW3F1ZXVlW3ddXTtcbiAgICB3Kys7XG4gICAgaiA9IDA7XG4gIH1cblxuICBjb25zb2xlLmxvZyhxdWV1ZSk7XG59XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gIGxldCBncmFwaCA9IFtdO1xuICBjb25zdCBwb3NzaWJsZU1vdmVzID0gW1xuICAgIFsyLCAxXSxcbiAgICBbMiwgLTFdLFxuICAgIFstMiwgMV0sXG4gICAgWy0yLCAtMV0sXG4gICAgWzEsIDJdLFxuICAgIFsxLCAtMl0sXG4gICAgWy0xLCAyXSxcbiAgICBbLTEsIC0yXSxcbiAgXTtcblxuICBjb25zdCBzdGFydCA9IFswLCAyXTtcbiAgY29uc3QgZW5kID0gWzUsIDZdO1xuXG4gIGNvbnN0IHJlcyA9IFtdO1xuICBjb25zdCBxdWV1ZSA9IFtdO1xuXG4gIHJlcy5wdXNoKHN0YXJ0KTtcblxuICBncmFwaCA9IGdyYXBoQ3JlYXRpb24ocG9zc2libGVNb3Zlcyk7XG4gIGNvbnNvbGUubG9nKGdyYXBoKTtcbiAgY29uc29sZS5sb2coc2VhcmNoUmVzdWx0KHN0YXJ0LCBlbmQsIGdyYXBoLCBxdWV1ZSwgcmVzKSk7XG59XG5cbm1haW4oKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vZGUoKSB7XG4gIGNvbnN0IGhlYWQgPSBbXTtcbiAgcmV0dXJuIHsgaGVhZCB9O1xufVxuIl0sIm5hbWVzIjpbImdyYXBoIiwic3RhcnQiLCJwdXNoIiwicG9zc2libGVNb3ZlcyIsInVuZGVmaW5lZCIsImkiLCJqIiwiaGVhZCIsImsiLCJncmFwaENyZWF0aW9uIiwiY29uc29sZSIsImxvZyIsImVuZCIsInF1ZXVlIiwidyIsImxlbmd0aCIsInNlYXJjaFJlc3VsdCIsIm1haW4iXSwic291cmNlUm9vdCI6IiJ9