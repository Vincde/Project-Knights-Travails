(()=>{"use strict";function o(e,t,n,l,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(t[0]===e[0]&&t[1]===e[1])return void console.log("ur here already");const h=7*e[0]+e[0]+e[1];for(let o=0;o<n[h].head.length;o++)l.push(n[h].head[o]);s+=1,o(l[s],t,n,l,r,s),console.log(l)}!function(){let e=[];const t=[0,2],n=[];n.push(t),e=function(o){const e=[void 0];for(let t=0;t<=7;t++)for(let n=0;n<=7;n++){e[7*t+t+n]={head:[]};for(let l=0;l<=7;l++)t+o[l][0]>=0&&t+o[l][0]<=7&&n+o[l][1]>=0&&n+o[l][1]<=7&&e[7*t+t+n].head.push([t+o[l][0],n+o[l][1]])}return e}([[2,1],[2,-1],[-2,1],[-2,-1],[1,2],[1,-2],[-1,2],[-1,-2]]),console.log(e),n.push(t),o(t,[5,6],e,[],n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBNEJBLFNBQVNBLEVBQWFDLEVBQU9DLEVBQUtDLEVBQU9DLEVBQU9DLEdBQWdCLElBQVhDLEVBQUtDLFVBQUFDLE9BQUEsUUFBQUMsSUFBQUYsVUFBQSxHQUFBQSxVQUFBLEdBQUcsRUFDM0QsR0FBSUwsRUFBSSxLQUFPRCxFQUFNLElBQU1DLEVBQUksS0FBT0QsRUFBTSxHQUUxQyxZQURBUyxRQUFRQyxJQUFJLG1CQUlkLE1BQU1DLEVBQWUsRUFBWFgsRUFBTSxHQUFTQSxFQUFNLEdBQUtBLEVBQU0sR0FFMUMsSUFBSyxJQUFJWSxFQUFJLEVBQUdBLEVBQUlWLEVBQU1TLEdBQUdFLEtBQUtOLE9BQVFLLElBQ3hDVCxFQUFNVyxLQUFLWixFQUFNUyxHQUFHRSxLQUFLRCxJQUkzQlAsR0FBUyxFQUVUTixFQUFhSSxFQUFNRSxHQUFRSixFQUFLQyxFQUFPQyxFQUFPQyxFQUFLQyxHQUVuREksUUFBUUMsSUFBSVAsRUFDZCxFQUVBLFdBQ0UsSUFBSUQsRUFBUSxHQUNaLE1BV01GLEVBQVEsQ0FBQyxFQUFHLEdBR1pJLEVBQU0sR0FHWkEsRUFBSVUsS0FBS2QsR0FFVEUsRUFqRUYsU0FBdUJhLEdBQ3JCLE1BQU1iLEVBQVEsTUFBQ00sR0FFZixJQUFLLElBQUlHLEVBQUksRUFBR0EsR0FBSyxFQUFHQSxJQUN0QixJQUFLLElBQUlDLEVBQUksRUFBR0EsR0FBSyxFQUFHQSxJQUFLLENBQzNCVixFQUFVLEVBQUpTLEVBQVFBLEVBQUlDLEdDUGYsQ0FBRUMsS0FESSxJRFNULElBQUssSUFBSUcsRUFBSSxFQUFHQSxHQUFLLEVBQUdBLElBRXBCTCxFQUFJSSxFQUFjQyxHQUFHLElBQU0sR0FDM0JMLEVBQUlJLEVBQWNDLEdBQUcsSUFBTSxHQUMzQkosRUFBSUcsRUFBY0MsR0FBRyxJQUFNLEdBQzNCSixFQUFJRyxFQUFjQyxHQUFHLElBQU0sR0FFM0JkLEVBQVUsRUFBSlMsRUFBUUEsRUFBSUMsR0FBR0MsS0FBS0MsS0FBSyxDQUM3QkgsRUFBSUksRUFBY0MsR0FBRyxHQUNyQkosRUFBSUcsRUFBY0MsR0FBRyxJQUk3QixDQUVGLE9BQU9kLENBQ1QsQ0EyQ1VlLENBbkJjLENBQ3BCLENBQUMsRUFBRyxHQUNKLENBQUMsR0FBSSxHQUNMLEVBQUUsRUFBRyxHQUNMLEVBQUUsR0FBSSxHQUNOLENBQUMsRUFBRyxHQUNKLENBQUMsR0FBSSxHQUNMLEVBQUUsRUFBRyxHQUNMLEVBQUUsR0FBSSxLQVlSUixRQUFRQyxJQUFJUixHQUVaRSxFQUFJVSxLQUFLZCxHQUVURCxFQUFhQyxFQVpELENBQUMsRUFBRyxHQVlTRSxFQVRYLEdBU3lCRSxFQUN6QyxDQUVBYyxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViZGV2LXRlbXBsYXRlLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3dlYmRldi10ZW1wbGF0ZS8uL3NyYy9ub2RlL25vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tcGx1c3BsdXMgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvZXh0ZW5zaW9ucywgaW1wb3J0L25vLW5hbWVkLWFzLWRlZmF1bHQsIGltcG9ydC9uby1uYW1lZC1hcy1kZWZhdWx0LW1lbWJlclxuaW1wb3J0IG5vZGUgZnJvbSBcIi4vbm9kZS9ub2RlLmpzXCI7XG5cbmZ1bmN0aW9uIGdyYXBoQ3JlYXRpb24ocG9zc2libGVNb3Zlcykge1xuICBjb25zdCBncmFwaCA9IFt1bmRlZmluZWRdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDw9IDc7IGkrKykge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDw9IDc7IGorKykge1xuICAgICAgZ3JhcGhbaSAqIDcgKyBpICsgal0gPSBub2RlKCk7XG4gICAgICBmb3IgKGxldCBrID0gMDsgayA8PSA3OyBrKyspIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGkgKyBwb3NzaWJsZU1vdmVzW2tdWzBdID49IDAgJiZcbiAgICAgICAgICBpICsgcG9zc2libGVNb3Zlc1trXVswXSA8PSA3ICYmXG4gICAgICAgICAgaiArIHBvc3NpYmxlTW92ZXNba11bMV0gPj0gMCAmJlxuICAgICAgICAgIGogKyBwb3NzaWJsZU1vdmVzW2tdWzFdIDw9IDdcbiAgICAgICAgKSB7XG4gICAgICAgICAgZ3JhcGhbaSAqIDcgKyBpICsgal0uaGVhZC5wdXNoKFtcbiAgICAgICAgICAgIGkgKyBwb3NzaWJsZU1vdmVzW2tdWzBdLFxuICAgICAgICAgICAgaiArIHBvc3NpYmxlTW92ZXNba11bMV0sXG4gICAgICAgICAgXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGdyYXBoO1xufVxuXG5mdW5jdGlvbiBzZWFyY2hSZXN1bHQoc3RhcnQsIGVuZCwgZ3JhcGgsIHF1ZXVlLCByZXMsIGNvdW50ID0gMCkge1xuICBpZiAoZW5kWzBdID09PSBzdGFydFswXSAmJiBlbmRbMV0gPT09IHN0YXJ0WzFdKSB7XG4gICAgY29uc29sZS5sb2coXCJ1ciBoZXJlIGFscmVhZHlcIik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgaSA9IHN0YXJ0WzBdICogNyArIHN0YXJ0WzBdICsgc3RhcnRbMV07XG5cbiAgZm9yIChsZXQgaiA9IDA7IGogPCBncmFwaFtpXS5oZWFkLmxlbmd0aDsgaisrKSB7XG4gICAgcXVldWUucHVzaChncmFwaFtpXS5oZWFkW2pdKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBjb3VudCArPSAxO1xuXG4gIHNlYXJjaFJlc3VsdChxdWV1ZVtjb3VudF0sIGVuZCwgZ3JhcGgsIHF1ZXVlLCByZXMsIGNvdW50KTtcblxuICBjb25zb2xlLmxvZyhxdWV1ZSk7XG59XG5cbmZ1bmN0aW9uIG1haW4oKSB7XG4gIGxldCBncmFwaCA9IFtdO1xuICBjb25zdCBwb3NzaWJsZU1vdmVzID0gW1xuICAgIFsyLCAxXSxcbiAgICBbMiwgLTFdLFxuICAgIFstMiwgMV0sXG4gICAgWy0yLCAtMV0sXG4gICAgWzEsIDJdLFxuICAgIFsxLCAtMl0sXG4gICAgWy0xLCAyXSxcbiAgICBbLTEsIC0yXSxcbiAgXTtcblxuICBjb25zdCBzdGFydCA9IFswLCAyXTtcbiAgY29uc3QgZW5kID0gWzUsIDZdO1xuXG4gIGNvbnN0IHJlcyA9IFtdO1xuICBjb25zdCBxdWV1ZSA9IFtdO1xuXG4gIHJlcy5wdXNoKHN0YXJ0KTtcblxuICBncmFwaCA9IGdyYXBoQ3JlYXRpb24ocG9zc2libGVNb3Zlcyk7XG4gIGNvbnNvbGUubG9nKGdyYXBoKTtcblxuICByZXMucHVzaChzdGFydCk7XG5cbiAgc2VhcmNoUmVzdWx0KHN0YXJ0LCBlbmQsIGdyYXBoLCBxdWV1ZSwgcmVzKTtcbn1cblxubWFpbigpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9kZSgpIHtcbiAgY29uc3QgaGVhZCA9IFtdO1xuICByZXR1cm4geyBoZWFkIH07XG59XG4iXSwibmFtZXMiOlsic2VhcmNoUmVzdWx0Iiwic3RhcnQiLCJlbmQiLCJncmFwaCIsInF1ZXVlIiwicmVzIiwiY291bnQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJjb25zb2xlIiwibG9nIiwiaSIsImoiLCJoZWFkIiwicHVzaCIsInBvc3NpYmxlTW92ZXMiLCJrIiwiZ3JhcGhDcmVhdGlvbiIsIm1haW4iXSwic291cmNlUm9vdCI6IiJ9